<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EventLogger" Id="{6e5f6654-9ffc-428b-845c-49dda0471b4b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EventLogger
VAR
	EventBuffer : ARRAY[1..MAXIMUM_SIZE_OF_EVENT_BUFFER] OF ST_Event;
	CurrentEventBufferIndex : INT := 0;
	
	_PersistentEventStorage : I_PersistentEventStorage;
END_VAR
VAR CONSTANT
	MAXIMUM_SIZE_OF_EVENT_BUFFER : INT := 100;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddEvent" Id="{36c01e8a-7b53-4398-a896-23c33bd706ab}">
      <Declaration><![CDATA[(* Returns TRUE if add succesful and FALSe if buffer is full *)
METHOD PUBLIC AddEvent : BOOL
VAR_INPUT
	eEventType : E_EventType;
	eEventSeverity : TcEventSeverity;
	nEventIdentity : UDINT;
	sEventText : STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEventBufferFull() THEN
	CurrentEventBufferIndex := CurrentEventBufferIndex + 1;
	eventbuffer[CurrentEventBufferIndex].eEventType := eEventType;
	eventbuffer[CurrentEventBufferIndex].eEventSeverity := eEventSeverity;
	eventbuffer[CurrentEventBufferIndex].nEventIdentity := nEventIdentity;
	eventbuffer[CurrentEventBufferIndex].sEventText := sEventText;
	UpdateEventTimestampWithSystemTime(stEvent := eventbuffer[CurrentEventBufferIndex]);
	AddEvent := TRUE;
ELSE
	AddEvent := FALSE;
END_IF

// Here we wan't to store the event persistently
_PersistentEventStorage.StoreEvent(stEvent := eventbuffer[CurrentEventBufferIndex]);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{77818cd6-c496-4ead-807f-1754b8913861}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iPersistentEventStorage : I_PersistentEventStorage;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_PersistentEventStorage := iPersistentEventStorage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsEventBufferFull" Id="{d68c9b9e-6636-4f39-826d-0dcc3fee0f8e}">
      <Declaration><![CDATA[METHOD PRIVATE IsEventBufferFull : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsEventBufferFull := (CurrentEventBufferIndex + 1) > MAXIMUM_SIZE_OF_EVENT_BUFFER;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EventLogger">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.AddEvent">
      <LineId Id="5" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="4" />
      <LineId Id="16" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="34" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.IsEventBufferFull">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>